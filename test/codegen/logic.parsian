(*
Logical expression grammar
Author: Thomas Bollmeier 2017-2019 <developer@thomas-bollmeier.de>
*)

-- Lexical elements:

comment '(*' '*)';

literal '"';

symbol PAR_OPEN '(';
symbol PAR_CLOSE ')';
symbol NOT '~';

token IDENT /[a-z]+/;

-- Production rules

@root
disj -> conj ( 'or' conj )*;

conj -> expr ( 'and' expr )*;

expr -> neg#NOT? ( content#identifier | PAR_OPEN content#disj PAR_CLOSE );

identifier -> IDENT =>
{
    :name "id"
    :attrs [{:key "name" :value child.text}]
};